---
- name: "Get home dir"
  ansible.builtin.set_fact:
    __kubectl_user_home: "{{ lookup('env', 'HOME') }}"

- name: Create .kube folder
  ansible.builtin.file:
    path: "{{ __kubectl_user_home }}/.kube"
    owner: "{{ __kubectl_user }}"
    group: "{{ __kubectl_user }}"
    state: directory
    mode: '0700'

- name: Copy kube-config to controller
  ansible.builtin.fetch:
    src: "/etc/kubernetes/admin.conf"
    dest: "/tmp/.kube_{{ groups['k8s_masters'][0] }}/config"
    flat: true
    mode: '0755'
  when: inventory_hostname == groups['k8s_masters'][0]

- name: Copy kube-config to all hosts
  ansible.builtin.copy:
    src: "/tmp/.kube_{{ groups['k8s_masters'][0] }}/config"
    dest: /tmp/kube-config
    mode: '0640'
  when: inventory_hostname != groups['k8s_masters'][0]
  become: false

- name: "Copy kube-config to {{ __kubectl_user }}"
  ansible.builtin.copy:
    src: "/tmp/kube-config"
    dest: "{{ __kubectl_user_home }}/.kube/config"
    remote_src: true
    owner: "{{ __kubectl_user }}"
    group: "{{ __kubectl_user }}"
    mode: '0600'
  when: inventory_hostname != groups['k8s_masters'][0]

- name: Cleanup .kube on controller
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  delegate_to: localhost
  become: false
  ignore_errors: true
  loop:
    - "/tmp/.kube_{{ groups['k8s_masters'][0] }}"
    - "/tmp/kube-config"

- name: "Get home dir of root (pool server)"
  ansible.builtin.set_fact:
    root_home: "{{ lookup('env', 'HOME') }}"
  become: true
  when: pool_server is defined

- name: Create .kube folder
  ansible.builtin.file:
    path: "{{ root_home }}/.kube"
    owner: root
    mode: '0700'
    state: directory
  when: pool_server is defined

- name: Setting up kubectl for the list of users
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ root_home }}/.kube/config"
    mode: '0600'
    owner: root
    remote_src: true
  when: pool_server is defined

- name: Restart containerd and kubelet
  systemd:
    name: "{{ item }}"
    state: restarted
  with_items:
    - containerd
    - kubelet
  ignore_errors: true
